[gd_resource type="VisualShader" load_steps=50 format=2]

[sub_resource type="VisualShaderNodeInput" id=1]
input_name = "normal"

[sub_resource type="VisualShaderNodeInput" id=2]
input_name = "camera"

[sub_resource type="VisualShaderNodeTransformVecMult" id=3]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=4]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 1, 1 ) ]

[sub_resource type="VisualShaderNodeVectorOp" id=5]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 2, 2, 2 ) ]
operator = 3

[sub_resource type="VisualShaderNodeScalarUniform" id=6]
uniform_name = "frequency"

[sub_resource type="VisualShaderNodeScalarUniform" id=7]
uniform_name = "Amplitude"

[sub_resource type="VisualShaderNodeScalarFunc" id=8]
function = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=9]
function = 0

[sub_resource type="VisualShaderNodeVectorCompose" id=10]

[sub_resource type="VisualShaderNodeVectorOp" id=11]

[sub_resource type="VisualShaderNodeScalarOp" id=12]

[sub_resource type="VisualShaderNodeInput" id=13]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarOp" id=14]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=15]
operator = 2

[sub_resource type="VisualShaderNodeScalarUniform" id=16]
uniform_name = "speed"

[sub_resource type="VisualShaderNodeScalarOp" id=17]
default_input_values = [ 0, 0.0, 1, 3.14159 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=18]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=19]
operator = 2

[sub_resource type="VisualShaderNodeScalarUniform" id=20]
uniform_name = "steepness"

[sub_resource type="VisualShaderNodeInput" id=21]
input_name = "vertex"

[sub_resource type="VisualShaderNodeScalarOp" id=22]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=23]
input_name = "vertex"

[sub_resource type="VisualShaderNodeScalarOp" id=24]

[sub_resource type="VisualShaderNodeScalarUniform" id=25]
uniform_name = "direction"

[sub_resource type="VisualShaderNodeVec3Constant" id=26]
constant = Vector3( 1, 0, 0 )

[sub_resource type="VisualShaderNodeScalarFunc" id=27]
function = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=28]
function = 0

[sub_resource type="VisualShaderNodeVectorDecompose" id=29]

[sub_resource type="VisualShaderNodeScalarOp" id=30]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=31]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=32]
operator = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=33]
function = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=34]
function = 0

[sub_resource type="VisualShaderNodeScalarOp" id=35]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=36]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=37]
operator = 1

[sub_resource type="VisualShaderNodeVectorCompose" id=38]

[sub_resource type="VisualShaderNodeVectorFunc" id=39]

[sub_resource type="VisualShaderNodeVectorDecompose" id=40]

[sub_resource type="VisualShaderNodeScalarOp" id=41]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=42]

[sub_resource type="VisualShaderNodeScalarOp" id=43]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=44]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=45]
operator = 2

[sub_resource type="VisualShaderNodeTexture" id=46]

[sub_resource type="VisualShaderNodeVec3Uniform" id=47]
uniform_name = "Direction_Vector"

[sub_resource type="VisualShaderNodeVectorOp" id=48]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 0, 1 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorDecompose" id=49]

[resource]
code = "shader_type spatial;
render_mode cull_disabled, specular_schlick_ggx;

uniform float frequency;
uniform vec3 Direction_Vector;
uniform float speed;
uniform float steepness;
uniform float Amplitude;



void vertex() {
// Input:28
	vec3 n_out28p0 = VERTEX;

// ScalarUniform:12
	float n_out12p0 = frequency;

// ScalarOp:24
	float n_in24p1 = 3.14159;
	float n_out24p0 = n_out12p0 * n_in24p1;

// Input:3
	vec3 n_out3p0 = VERTEX;

// VectorDecompose:7
	float n_out7p0 = n_out3p0.x;
	float n_out7p1 = n_out3p0.y;
	float n_out7p2 = n_out3p0.z;

// VectorUniform:68
	vec3 n_out68p0 = Direction_Vector;

// VectorOp:69
	vec3 n_in69p1 = vec3(1.00000, 0.00000, 1.00000);
	vec3 n_out69p0 = n_out68p0 * n_in69p1;

// VectorFunc:58
	vec3 n_out58p0 = normalize(n_out69p0);

// VectorDecompose:59
	float n_out59p0 = n_out58p0.x;
	float n_out59p1 = n_out58p0.y;
	float n_out59p2 = n_out58p0.z;

// ScalarOp:62
	float n_out62p0 = n_out7p0 * n_out59p0;

// ScalarOp:60
	float n_out60p0 = n_out7p2 * n_out59p2;

// ScalarOp:61
	float n_out61p0 = n_out62p0 + n_out60p0;

// ScalarOp:21
	float n_out21p0 = n_out24p0 * n_out61p0;

// Input:20
	float n_out20p0 = TIME;

// ScalarOp:32
	float n_in32p1 = 0.00000;
	float n_out32p0 = n_out20p0 + n_in32p1;

// ScalarUniform:23
	float n_out23p0 = speed;

// ScalarOp:22
	float n_out22p0 = n_out32p0 * n_out23p0;

// ScalarOp:19
	float n_out19p0 = n_out21p0 + n_out22p0;

// ScalarFunc:15
	float n_out15p0 = cos(n_out19p0);

// ScalarUniform:27
	float n_out27p0 = steepness;

// ScalarUniform:14
	float n_out14p0 = Amplitude;

// ScalarOp:29
	float n_out29p0 = n_out27p0 * n_out14p0;

// ScalarOp:26
	float n_out26p0 = n_out15p0 * n_out29p0;

// ScalarOp:65
	float n_out65p0 = n_out26p0 * n_out59p0;

// ScalarFunc:16
	float n_out16p0 = sin(n_out19p0);

// ScalarOp:25
	float n_out25p0 = n_out16p0 * n_out14p0;

// ScalarOp:63
	float n_out63p0 = n_out26p0 * n_out59p2;

// VectorCompose:17
	vec3 n_out17p0 = vec3(n_out65p0, n_out25p0, n_out63p0);

// VectorOp:18
	vec3 n_out18p0 = n_out28p0 + n_out17p0;

// Output:0
	VERTEX = n_out18p0;

}

void fragment() {
// Input:3
	mat4 n_out3p0 = CAMERA_MATRIX;

// Input:2
	vec3 n_out2p0 = NORMAL;

// TransformVectorMult:4
	vec3 n_out4p0 = (n_out3p0 * vec4(n_out2p0, 0.0)).xyz;

// VectorOp:5
	vec3 n_in5p1 = vec3(1.00000, 1.00000, 1.00000);
	vec3 n_out5p0 = n_out4p0 + n_in5p1;

// VectorOp:6
	vec3 n_in6p1 = vec3(2.00000, 2.00000, 2.00000);
	vec3 n_out6p0 = n_out5p0 / n_in6p1;

// Output:0
	ALBEDO = n_out6p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -739.263, -271.531 )
modes/cull = 2
nodes/vertex/0/position = Vector2( 1600, -40 )
nodes/vertex/3/node = SubResource( 23 )
nodes/vertex/3/position = Vector2( -1700, 140 )
nodes/vertex/7/node = SubResource( 49 )
nodes/vertex/7/position = Vector2( -1480, 140 )
nodes/vertex/12/node = SubResource( 6 )
nodes/vertex/12/position = Vector2( -1840, -120 )
nodes/vertex/14/node = SubResource( 7 )
nodes/vertex/14/position = Vector2( -240, 420 )
nodes/vertex/15/node = SubResource( 8 )
nodes/vertex/15/position = Vector2( -40, 60 )
nodes/vertex/16/node = SubResource( 9 )
nodes/vertex/16/position = Vector2( -40, 180 )
nodes/vertex/17/node = SubResource( 10 )
nodes/vertex/17/position = Vector2( 1120, 60 )
nodes/vertex/18/node = SubResource( 11 )
nodes/vertex/18/position = Vector2( 1340, -80 )
nodes/vertex/19/node = SubResource( 12 )
nodes/vertex/19/position = Vector2( -220, 140 )
nodes/vertex/20/node = SubResource( 13 )
nodes/vertex/20/position = Vector2( -1340, 300 )
nodes/vertex/21/node = SubResource( 14 )
nodes/vertex/21/position = Vector2( -500, 80 )
nodes/vertex/22/node = SubResource( 15 )
nodes/vertex/22/position = Vector2( -480, 240 )
nodes/vertex/23/node = SubResource( 16 )
nodes/vertex/23/position = Vector2( -800, 380 )
nodes/vertex/24/node = SubResource( 17 )
nodes/vertex/24/position = Vector2( -1560, -100 )
nodes/vertex/25/node = SubResource( 18 )
nodes/vertex/25/position = Vector2( 260, 280 )
nodes/vertex/26/node = SubResource( 19 )
nodes/vertex/26/position = Vector2( 520, 40 )
nodes/vertex/27/node = SubResource( 20 )
nodes/vertex/27/position = Vector2( -240, 340 )
nodes/vertex/28/node = SubResource( 21 )
nodes/vertex/28/position = Vector2( 560, -80 )
nodes/vertex/29/node = SubResource( 22 )
nodes/vertex/29/position = Vector2( 280, 140 )
nodes/vertex/32/node = SubResource( 24 )
nodes/vertex/32/position = Vector2( -780, 260 )
nodes/vertex/39/node = SubResource( 25 )
nodes/vertex/39/position = Vector2( -2120, -540 )
nodes/vertex/40/node = SubResource( 26 )
nodes/vertex/40/position = Vector2( -2080, -900 )
nodes/vertex/43/node = SubResource( 27 )
nodes/vertex/43/position = Vector2( -1520, -1080 )
nodes/vertex/44/node = SubResource( 28 )
nodes/vertex/44/position = Vector2( -1520, -1000 )
nodes/vertex/45/node = SubResource( 29 )
nodes/vertex/45/position = Vector2( -1520, -900 )
nodes/vertex/48/node = SubResource( 30 )
nodes/vertex/48/position = Vector2( -1200, -1120 )
nodes/vertex/49/node = SubResource( 31 )
nodes/vertex/49/position = Vector2( -1200, -980 )
nodes/vertex/50/node = SubResource( 32 )
nodes/vertex/50/position = Vector2( -1000, -1080 )
nodes/vertex/51/node = SubResource( 33 )
nodes/vertex/51/position = Vector2( -1640, -560 )
nodes/vertex/52/node = SubResource( 34 )
nodes/vertex/52/position = Vector2( -1520, -760 )
nodes/vertex/54/node = SubResource( 35 )
nodes/vertex/54/position = Vector2( -1200, -820 )
nodes/vertex/55/node = SubResource( 36 )
nodes/vertex/55/position = Vector2( -1320, -580 )
nodes/vertex/56/node = SubResource( 37 )
nodes/vertex/56/position = Vector2( -1000, -780 )
nodes/vertex/57/node = SubResource( 38 )
nodes/vertex/57/position = Vector2( -800, -920 )
nodes/vertex/58/node = SubResource( 39 )
nodes/vertex/58/position = Vector2( 140, -620 )
nodes/vertex/59/node = SubResource( 40 )
nodes/vertex/59/position = Vector2( 360, -620 )
nodes/vertex/60/node = SubResource( 41 )
nodes/vertex/60/position = Vector2( -1000, 160 )
nodes/vertex/61/node = SubResource( 42 )
nodes/vertex/61/position = Vector2( -780, 100 )
nodes/vertex/62/node = SubResource( 43 )
nodes/vertex/62/position = Vector2( -1000, 20 )
nodes/vertex/63/node = SubResource( 44 )
nodes/vertex/63/position = Vector2( 780, 40 )
nodes/vertex/65/node = SubResource( 45 )
nodes/vertex/65/position = Vector2( 760, -220 )
nodes/vertex/67/node = SubResource( 46 )
nodes/vertex/67/position = Vector2( -2356.93, 144.061 )
nodes/vertex/68/node = SubResource( 47 )
nodes/vertex/68/position = Vector2( -240, -620 )
nodes/vertex/69/node = SubResource( 48 )
nodes/vertex/69/position = Vector2( -40, -640 )
nodes/vertex/connections = PoolIntArray( 3, 0, 7, 0, 17, 0, 18, 1, 18, 0, 0, 0, 19, 0, 15, 0, 19, 0, 16, 0, 21, 0, 19, 0, 23, 0, 22, 1, 22, 0, 19, 1, 12, 0, 24, 0, 24, 0, 21, 0, 16, 0, 25, 0, 14, 0, 25, 1, 15, 0, 26, 0, 28, 0, 18, 0, 27, 0, 29, 0, 14, 0, 29, 1, 29, 0, 26, 1, 32, 0, 22, 0, 20, 0, 32, 0, 40, 0, 45, 0, 39, 0, 43, 0, 39, 0, 44, 0, 45, 0, 48, 0, 43, 0, 48, 1, 48, 0, 50, 0, 49, 0, 50, 1, 44, 0, 49, 1, 54, 0, 56, 0, 55, 0, 56, 1, 39, 0, 52, 0, 45, 0, 54, 0, 52, 0, 54, 1, 51, 0, 55, 1, 39, 0, 51, 0, 50, 0, 57, 0, 45, 2, 49, 0, 45, 2, 55, 0, 56, 0, 57, 2, 25, 0, 17, 1, 7, 0, 62, 0, 7, 2, 60, 0, 59, 0, 62, 1, 59, 2, 60, 1, 62, 0, 61, 0, 60, 0, 61, 1, 61, 0, 21, 1, 26, 0, 65, 0, 26, 0, 63, 0, 59, 0, 65, 1, 59, 2, 63, 1, 65, 0, 17, 0, 63, 0, 17, 2, 58, 0, 59, 0, 68, 0, 69, 0, 69, 0, 58, 0 )
nodes/fragment/0/position = Vector2( 500, 140 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( -640, 280 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( -640, 200 )
nodes/fragment/4/node = SubResource( 3 )
nodes/fragment/4/position = Vector2( -340, 200 )
nodes/fragment/5/node = SubResource( 4 )
nodes/fragment/5/position = Vector2( -20, 200 )
nodes/fragment/6/node = SubResource( 5 )
nodes/fragment/6/position = Vector2( 200, 160 )
nodes/fragment/connections = PoolIntArray( 2, 0, 4, 1, 3, 0, 4, 0, 4, 0, 5, 0, 5, 0, 6, 0, 6, 0, 0, 0 )
